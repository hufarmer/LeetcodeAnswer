class Solution {
public:
	bool isInterleave(string s1, string s2, string s3) {
		int m = s1.size();
		int n = s2.size();
		if (m + n != s3.size()) return false;
		vector<vector<bool>> path(m+1, vector<bool>(n+1,false));
		for (int i = 0; i <= m; i++)
		{
			for (int j = 0; j <= n; j++)
			{
				if (i==0 && j==0) 
					path[0][0] = true;
				else if (i == 0)
					path[0][j] = path[0][j - 1] && s2[j-1] == s3[j-1];
				else if (j == 0)
					path[i][0] = path[i-1][0] && s1[i - 1] == s3[i - 1];
				else
				{
					path[i][j] = (path[i][j-1] && s2[j - 1] == s3[i + j - 1]) || 
						( path[i-1][j] && s1[i-1] == s3[i + j - 1]);
				}

			}
		}
		return path[m][n];
	}
};
