/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void dfs(vector<int>& nums, int begin, int end, TreeNode* root)
    {
        int mid = (begin+end+1)/2;
        root->val = nums[mid];
        if (begin<=mid-1)
        {
            TreeNode* l = new TreeNode(0);
            root->left = l;
            dfs(nums, begin, mid-1, l);
        }
        if (mid+1<=end)
        {
            TreeNode* r = new TreeNode(0);
            root->right = r;
            dfs(nums, mid+1, end, r);
        }
        return;
    }

    TreeNode* sortedArrayToBST(vector<int>& nums) {
        
        int l = nums.size();
        if (l==0) return nullptr;
        TreeNode* root = new TreeNode(0);
        dfs(nums, 0, nums.size()-1, root);
        return root;
    }
};

