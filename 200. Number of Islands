class Solution {
public:
   	int m;
	int n;
	int numIslands(vector<vector<char>>& grid) {
		int count = 0;
		// m*n
		m = grid.size();
		if (m == 0) 
			return 0;
		else 
			n = grid[0].size();
		if (n == 0)
			return 0;
	
		for (int i = 0; i < m; i++)
		{
			for (int j = 0; j < n; j++)
			{
				if (grid[i][j] == '1')
				{
					search(grid, i, j);
					++count;
				}
			}
		}
		return count;
	}

	void search(vector<vector<char>>& grid, int i, int j)
	{
		if (i<0 || i>m - 1 || j<0 || j>n - 1 || grid[i][j] == '0')
			return;
		grid[i][j] = '0';
		search(grid, i - 1, j);
		search(grid, i + 1, j);
		search(grid, i   ,  j-1);
		search(grid, i   ,  j+1);
	}
};
